name: macOS uni

on:
  workflow_dispatch:
#  push:
#    branches: [ 'test-gh-ci' ]

env:
  VCPKG_ROOT: "${{ github.workspace }}/vcpkg"

  GHW_BIN_NAME: 'EkoScape'
  GHW_PKG_NAME: 'EkoScape-macos-universal'
  GHW_PKG_DIR: 'build/_CPack_Packages/Darwin/Bundle/EkoScape-macos-universal'
  GHW_BUNDLE_NAME: 'EkoScape.app'

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        include:
          - arch: arm64
            vcpkg_triplet: arm64-osx
          - arch: x86_64
            vcpkg_triplet: x64-osx

    steps:
      - name: Install sys deps
        run: |
          brew install glew

      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install CMake & Ninja
        uses: lukka/get-cmake@latest

      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: "${{ env.VCPKG_ROOT }}"
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Configure build ${{ matrix.arch }}
        run: >
          cmake --preset default
          -DBUILD_SHARED_LIBS=OFF
          -DCMAKE_OSX_ARCHITECTURES='${{ matrix.arch }}'
          -DVCPKG_OSX_ARCHITECTURES='${{ matrix.arch }}'
          -DVCPKG_TARGET_TRIPLET='${{ matrix.vcpkg_triplet }}'
          -DVCPKG_CRT_LINKAGE=static
          -DVCPKG_LIBRARY_LINKAGE=static
          -DVCPKG_BUILD_TYPE=release

      - name: Build ${{ matrix.arch }}
        run: |
          cmake --build --preset no-jobs --config Release
          mv -v 'bin/Release/${{ env.GHW_BIN_NAME }}' \
             'bin/Release/${{ env.GHW_BIN_NAME }}-${{ matrix.arch }}'

      - name: Upload ${{ matrix.arch }}
        uses: actions/upload-artifact@v4
        with:
          name: "macos-bin-${{ matrix.arch }}"
          path: "bin/Release/${{ env.GHW_BIN_NAME }}-*"
          if-no-files-found: error
          compression-level: 6
          overwrite: true
          include-hidden-files: false

  # vcpkg doesn't currently support universal macOS binaries, so making manually.
  # See `CMakeLists.txt` for `build_uni` config.
  build_uni:
    needs: build
    runs-on: macos-latest

    steps:
      - name: Install sys deps
        run: |
          brew install glew

      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install CMake & Ninja
        uses: lukka/get-cmake@latest

      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: "${{ env.VCPKG_ROOT }}"
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Configure build
        run: >
          cmake --preset default
          -DBUILD_SHARED_LIBS=OFF
          -DVCPKG_CRT_LINKAGE=static
          -DVCPKG_LIBRARY_LINKAGE=static
          -DVCPKG_BUILD_TYPE=release
          -DPKG_SUFFIX='-universal'
          -DPKG_MACOS_BUILD_UNI_DIR=ON

      - name: Download bins
        uses: actions/download-artifact@v4
        with:
          path: build_uni_temp
          pattern: 'macos-bin-*'
          merge-multiple: true

      - name: Build uni
        run: |
          set -x
          chmod +x 'build_uni_temp/${{ env.GHW_BIN_NAME }}'*
          lipo -info 'build_uni_temp/${{ env.GHW_BIN_NAME }}'*

          mkdir -v build_uni
          lipo -create 'build_uni_temp/${{ env.GHW_BIN_NAME }}'* \
               -output 'build_uni/${{ env.GHW_BIN_NAME }}'
          lipo -info 'build_uni/${{ env.GHW_BIN_NAME }}'
          set +x

      - name: Package up
        run: cpack -C Release --config build/CPackConfig.cmake -B build --verbose

      - name: Debug bundle
        run: ls -alR '${{ env.GHW_PKG_DIR }}'

      - name: Verify bundle
        run: cmake --build --preset no-jobs --config Release --target check_macos_bundle

      - name: Compress bundle
        run: |
          set -x
          tar -czf 'build/${{ env.GHW_PKG_NAME }}.tar.gz' \
              -C '${{ env.GHW_PKG_DIR }}' \
              '${{ env.GHW_BUNDLE_NAME }}' \
              '.itch.toml'
          cd build
          shasum -a 256 '${{ env.GHW_PKG_NAME }}.tar.gz' \
                 > '${{ env.GHW_PKG_NAME }}.tar.gz.sha256'
          cd -
          set +x

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: macos-uni
          path: |
            build/*.tar.gz
            build/*.dmg
            build/*.sha256
          if-no-files-found: error
          compression-level: 0
          overwrite: true
          include-hidden-files: false
