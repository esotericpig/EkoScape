###
# Configurable params w/ defaults:
#   # See: https://github.com/linuxdeploy/linuxdeploy/releases/tag/continuous
#   # - aarch64, armhf, i386, static-x86_64, x86_64
#   -DLINUXDEPLOY_ARCH=x86_64
#
# Running:
#   # Currently in this script, `Release` is always used (i.e., `--config` is always ignored).
#   cmake --build --preset default --config Release --target appimage
#
# 1. Downloads `linuxdeploy` to `build/downloads/`, if doesn't exist.
# 2. Deletes `build/AppDir/` and `build/AppImage/`.
# 3. Installs `Release` to `build/AppDir/usr/`.
# 4. Builds AppImage to `build/AppImage/`, using `linuxdeploy`.
#
# @author Bradley Whited
###

set(RDNS_NAME "@RDNS_NAME@")
set(BIN_NAME "@BIN_NAME@")
set(DOWNLOADS_DIR "@DOWNLOADS_DIR@")
set(ASSETS_DIR "@ASSETS_DIR@")

set(APPDIR_DIR "${CMAKE_BINARY_DIR}/AppDir")
set(APPDIR_PREFIX "${APPDIR_DIR}/usr")
#cmake_path(RELATIVE_PATH APPDIR_PREFIX)
set(APPIMG_DIR "@APPIMG_DIR@")
file(RELATIVE_PATH APPIMG_REL_DIR "@CMAKE_SOURCE_DIR@" "${APPIMG_DIR}")

set(LINUXDEPLOY_ARCH "@LINUXDEPLOY_ARCH@")
set(LINUXDEPLOY_FILENAME "linuxdeploy-${LINUXDEPLOY_ARCH}.AppImage")
set(LINUXDEPLOY_URL
    "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/${LINUXDEPLOY_FILENAME}")
set(LINUXDEPLOY_BIN "${DOWNLOADS_DIR}/${LINUXDEPLOY_FILENAME}")

############################################
# Downloads                                #
############################################
if(NOT EXISTS "${LINUXDEPLOY_BIN}")
  message(STATUS "Downloading '${LINUXDEPLOY_URL}' to '${LINUXDEPLOY_BIN}'...")
  file(DOWNLOAD "${LINUXDEPLOY_URL}" "${LINUXDEPLOY_BIN}"
      TLS_VERIFY ON
      SHOW_PROGRESS
  )
  file(CHMOD "${LINUXDEPLOY_BIN}"
      FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE
                       GROUP_READ GROUP_WRITE GROUP_EXECUTE
                       WORLD_READ WORLD_EXECUTE
  )
endif()

############################################
# Clean                                    #
############################################
if(EXISTS "${APPDIR_DIR}")
  message(STATUS "Deleting old dir '${APPDIR_DIR}'...")
  file(REMOVE_RECURSE "${APPDIR_DIR}")
endif()
if(EXISTS "${APPIMG_DIR}")
  message(STATUS "Deleting old dir '${APPIMG_DIR}'...")
  file(REMOVE_RECURSE "${APPIMG_DIR}")
endif()

############################################
# Install & Build                          #
############################################
execute_process(
    COMMAND "${CMAKE_COMMAND}"
            --install "${CMAKE_BINARY_DIR}"
            --config Release
            --prefix "${APPDIR_PREFIX}"
            --component appimage
    COMMAND_ECHO STDOUT
    COMMAND_ERROR_IS_FATAL ANY
)
file(MAKE_DIRECTORY "${APPIMG_DIR}")
execute_process(
    COMMAND "${LINUXDEPLOY_BIN}"
            --appdir "${APPDIR_DIR}"
            --icon-file "${ASSETS_DIR}/icons/${RDNS_NAME}.png"
            --output appimage
    WORKING_DIRECTORY "${APPIMG_DIR}"
    COMMAND_ECHO STDOUT
    COMMAND_ERROR_IS_FATAL ANY
)
message("")
message(STATUS "Consider running the AppImage to test it: "
               "./${APPIMG_REL_DIR}/${BIN_NAME}-${LINUXDEPLOY_ARCH}.AppImage")
